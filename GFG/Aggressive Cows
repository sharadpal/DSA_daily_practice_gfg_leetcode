Examples :

Input: stalls[] = [1, 2, 4, 8, 9], k = 3
Output: 3
Explanation: The first cow can be placed at stalls[0], 
the second cow can be placed at stalls[2] and 
the third cow can be placed at stalls[3]. 
The minimum distance between cows, in this case, is 3, which also is the largest among all possible ways.
---------------CODE-------------
class Solution {
    public static boolean isPossible(int stalls[], int minDist,int k){
        int cows=1, lastCowPosition=stalls[0];
        for(int i=1;i<stalls.length;i++){
            if(stalls[i]-lastCowPosition>=minDist){
                cows++;
                lastCowPosition= stalls[i];
                if(cows>=k) return true;
            }
        }
        return false;
    }
    public static int aggressiveCows(int[] stalls, int k) {
        // code here
        int n=stalls.length;
        Arrays.sort(stalls);
        int low=1,high=stalls[n-1]-stalls[0];
        int res=0;
        while(low<=high){
            int mid= low+(high-low)/2;
            if(isPossible(stalls,mid,k)){
                res=mid;
                low= mid+1;
                
            }else{
                high= mid-1;
            }
        }
        return res;
    }
}
