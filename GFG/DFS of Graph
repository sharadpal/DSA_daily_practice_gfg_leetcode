Input: adj[][] = [[2, 3, 1], [0], [0, 4], [0], [2]]

Output: [0, 2, 4, 3, 1]



class Solution {
    // Function to return a list containing the DFS traversal of the graph.
    public static void dfs1(ArrayList<ArrayList<Integer>>adj,int curr,boolean vis[],ArrayList<Integer> ans){
        ans.add(curr);
        vis[curr]=true;
        for(int i=0;i<adj.get(curr).size();i++){
            // padhosi ko dhono
            int node= adj.get(curr).get(i);
            if(!vis[node]){   // check that padhosi false hai ki nahi if yes then work
                dfs1(adj,node,vis,ans);
            }
        }
    }
    
    public ArrayList<Integer> dfs(ArrayList<ArrayList<Integer>> adj) {
        // Code here
        ArrayList<Integer>ans= new ArrayList<>();
        boolean vis[]= new boolean[adj.size()];
        for(int i=0;i<adj.size();i++){
            if(!vis[i]){
                dfs1(adj,i,vis,ans);
            }
        }
        return ans;
    }
}
