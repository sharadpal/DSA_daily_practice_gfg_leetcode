There are n children standing in a line. Each child is assigned a rating value given in the integer array arr[]. You are giving candies 
to these children subjected to the following requirements:

Each child must have at least one candy.
Children with a higher rating than their neighbors get more candies than their neighbors.
Return the minimum number of candies you need to have to distribute.

Note: The answer will always fit into a 32-bit integer.

Examples:

Input: arr[] = [1, 0, 2]
Output: 5
Explanation: Children at index 0 and 2 will get 2 candies each as their rating is higher than index 1, and index 1 will get 1 candy. 
Thus total candies = 2 + 1 + 2 = 5.

--------------->>>>>>>>>>>..... CODE---------------------
class Solution {
    static int minCandy(int arr[]) {
        // code here
        int n= arr.length;
        int candy[]=new int[n];
        Arrays.fill(candy,1);
        // left to right check rating
        for(int i=1;i<n;i++){
            if(arr[i]>arr[i-1]){
                candy[i]=candy[i-1]+1;
            }
            
        }
        for(int i=n-2;i>=0;i--){
            if(arr[i]>arr[i+1]){
                candy[i]=Math.max(candy[i],candy[i+1]+1);
            }
        }
        int sum=0;
        for(int i=0;i<candy.length;i++){
            sum+=candy[i];
        }
        return sum;
    }
}
