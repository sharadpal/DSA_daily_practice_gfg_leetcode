Examples:
Input: root = [1,2,3,4,5,6,7], n1 = 5 , n2 = 6
Output: 1
Explanation: LCA of 5 and 6 is 1.
----------------------------------------------------------------
class Solution {
    public static boolean getPath(Node root,int n,ArrayList<Node>path){
        if(root==null) return false;
        path.add(root);
        if(root.data==n) return true;
        boolean foundLeft= getPath(root.left,n,path);
        boolean foundRight=getPath(root.right,n,path);
        if(foundLeft || foundRight) return true;
        path.remove(path.size()-1);
        return false;
    }
    Node lca(Node root, int n1, int n2) {
        // Your code here
        ArrayList<Node>path1= new ArrayList<>();
        ArrayList<Node>path2= new ArrayList<>();
        getPath(root,n1,path1);
        getPath(root,n2,path2);
        
        int i=0;
        for(;i<path1.size() && i<path2.size();i++){
            if(path1.get(i)!=path2.get(i)) break;
        }
        Node lca= path1.get(i-1);
        return lca;
    }
}
