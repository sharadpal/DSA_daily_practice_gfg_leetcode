Examples :

Input: Tree = [11, 22, 33, 44, 55, 66, 77]
        11
      /   \
     22  33
    /  \  /  \
  44 55 66 77
a = 77, b = 22
Output: 3
Explanation: We need the distance between 77 and 22. Being at node 77, we need to take three steps ahead in 
order to reach node 22. The path followed will be: 77 -> 33 -> 11 -> 22. Hence, the result is 3. 

---------------------------------------------------------------------
class GfG {
    public static Node lca(Node root,int n1,int n2){
        if(root==null || root.data==n1 || root.data==n2){
            return root;
        }
        Node leftLca= lca(root.left,n1,n2);
        Node rightLca=lca(root.right,n1,n2);
        if(leftLca==null) return rightLca;
        if(rightLca==null) return leftLca;
        return root;
    }
    public static int lcaDist(Node root,int n){
        if(root==null) return -1;
        if(root.data==n) return 0;
        int leftDist=lcaDist(root.left,n);
        int rightDist=lcaDist(root.right,n);
        if(leftDist==-1 && rightDist==-1) return -1;
        else if(leftDist==-1) return rightDist+1;
        else{
            return leftDist+1;
        }
    }
    int findDist(Node root, int a, int b) {
        // Your code here
        Node lca= lca(root,a,b);
        int dist1= lcaDist(lca,a);
        int dist2=lcaDist(lca,b);
        return dist1+dist2;
        
    }
}
