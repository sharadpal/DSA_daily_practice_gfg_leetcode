Starting with a 1-indexed array of zeros and a list of operations, for each operation add a value to each array element 
between two given indices, inclusive. Once all operations have been performed, return the maximum value in the array.

Example
Queries are interpreted as follows:

    a b k
    1 5 3
    4 8 7
    6 9 1

-------------------------------------------------------------------------------------------
public static long arrayManipulation(int n, List<List<Integer>> queries) {
        long[] arr= new long[n+2];
        for(List<Integer>query: queries){
            int a= query.get(0);
            int b= query.get(1);
            int k= query.get(2);
            
            arr[a]+=k;
            if(b+1<=n){
                arr[b+1]-=k;
            }
        }
        
        //calculate prefix sum, get max value
        long max= Long.MIN_VALUE;
        long current=0;
        for(int i=1;i<=n;i++){
            current+=arr[i];
            if(current>max){
                max= current;
            }
        }
        return max;
    }
