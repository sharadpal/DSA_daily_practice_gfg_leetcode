Example 1:

Input: nums1 = [1,2,3], nums2 = [2,4,6]
Output: [[1,3],[4,6]]
Explanation:
For nums1, nums1[1] = 2 is present at index 0 of nums2, whereas nums1[0] = 1 and nums1[2] = 3 are not present in nums2. Therefore, answer[0] = [1,3].
For nums2, nums2[0] = 2 is present at index 1 of nums1, whereas nums2[1] = 4 and nums2[2] = 6 are not present in nums2. Therefore, answer[1] = [4,6].



class Solution {
    public List<List<Integer>> findDifference(int[] nums1, int[] nums2) {
        HashSet<Integer>set1= new HashSet<>();
        HashSet<Integer>set2= new HashSet<>();
        List<List<Integer>> list= new ArrayList<>();
        for(int num:nums1){
            set1.add(num);
        }

        for(int nums:nums2){
            set2.add(nums);
        }
        List<Integer>diff1=new ArrayList<>();
        List<Integer>diff2= new ArrayList<>();
        for(int num:set1){
            if(!set2.contains(num)){
                diff1.add(num);
            }
        }
        for(int num:set2){
            if(!set1.contains(num)){
                diff2.add(num);
            }
        }
        list.add(diff1);
        list.add(diff2);
        return list;
    }
}
